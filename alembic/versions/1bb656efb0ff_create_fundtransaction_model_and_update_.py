"""Create FundTransaction model and update relationships

Revision ID: 1bb656efb0ff
Revises: 0f5bcaada4a6
Create Date: 2025-01-17 10:22:12.455040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1bb656efb0ff'
down_revision: Union[str, None] = '0f5bcaada4a6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_transactions_is_deleted', table_name='transactions')
    op.drop_table('transactions')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('transaction_type', postgresql.ENUM('RENT', 'DEPOSIT', 'MAINTENANCE', 'UTILITY', 'PARKING', 'FINE', 'REFUND', 'ADJUSTMENT', 'OTHER', name='transactiontype'), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REFUNDED', 'PARTIAL', 'OVERDUE', 'DISPUTED', name='transactionstatus'), autoincrement=False, nullable=True),
    sa.Column('payment_method', postgresql.ENUM('CASH', 'BANK_TRANSFER', 'CHECK', 'CREDIT_CARD', 'DEBIT_CARD', 'MOBILE_PAYMENT', 'ONLINE_PAYMENT', 'OTHER', name='paymentmethod'), autoincrement=False, nullable=True),
    sa.Column('building_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('unit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fund_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('RENT', 'DEPOSIT', 'MAINTENANCE', 'UTILITY', 'PARKING', 'FINE', 'REFUND', 'ADJUSTMENT', 'OTHER', name='transactiontype'), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reference_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('payment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('late_fee', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('discount', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], name='transactions_building_id_fkey'),
    sa.ForeignKeyConstraint(['fund_id'], ['funds.id'], name='transactions_fund_id_fkey'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name='transactions_tenant_id_fkey'),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], name='transactions_unit_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey')
    )
    op.create_index('ix_transactions_is_deleted', 'transactions', ['is_deleted'], unique=False)
    # ### end Alembic commands ###
