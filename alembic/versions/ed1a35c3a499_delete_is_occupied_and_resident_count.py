"""delete is_occupied and resident_count

Revision ID: ed1a35c3a499
Revises: 12955d39dab6
Create Date: 2025-01-21 23:07:11.207276

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ed1a35c3a499'
down_revision: Union[str, None] = '12955d39dab6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tenants', 'identification_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('tenants', 'lease_start_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('tenants', 'lease_end_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.drop_column('units', 'is_occupied')
    op.drop_column('units', 'resident_count')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('units', sa.Column('resident_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('units', sa.Column('is_occupied', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.alter_column('tenants', 'lease_end_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('tenants', 'lease_start_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('tenants', 'identification_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
